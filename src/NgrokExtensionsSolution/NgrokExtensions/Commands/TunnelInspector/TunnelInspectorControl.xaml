<UserControl x:Class="NgrokExtensions.TunnelInspector.TunnelInspectorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="MyToolWindow">
    <Grid>
        <StackPanel Orientation="Vertical">
            <!-- toggle visibility / swap with panel - based on existance of tunnels or not -->
            <DataGrid ItemsSource="{Binding Path=TunnelManager.Tunnels}" AutoGenerateColumns="False"
                      BorderThickness="0" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" 
                      GridLinesVisibility="None" FontSize="14" Foreground="White" RowHeaderWidth="7"
                      Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"
                      BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"
                      RowBackground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}">

                <DataGrid.Resources>
                    <Style TargetType="Button" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!--<Setter TargetName="Border" Property="Background" Value="#ACB8B7" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="#E3E7E7" />
                                            <Setter TargetName="Arrow" Property="Fill" Value="#F1F3F3" />-->
                                        </Trigger>

                                        <Trigger Property="IsPressed" Value="True">
                                            <!--<Setter TargetName="Border" Property="Background" Value="#91A1A0" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="#E3E7E7" />
                                            <Setter TargetName="Arrow" Property="Fill" Value="#FFFFFF" />-->
                                        </Trigger>

                                        <Trigger Property="IsEnabled" Value="False">
                                            <!--<Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />-->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" />
                        <Setter Property="Padding" Value="8,5,5,5"/>
                        <Setter Property="Foreground" Value="Gray" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                
                <DataGrid.RowHeaderStyle>
                    <Style TargetType="DataGridRowHeader">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" />
                    </Style>
                </DataGrid.RowHeaderStyle>
                
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" />
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.CommandBindings>
                    <CommandBinding Command="ApplicationCommands.SelectAll" CanExecute="CommandBinding_CanExecute" />
                </DataGrid.CommandBindings>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding name}" />
                    <DataGridHyperlinkColumn Header="Public URL" Binding="{Binding public_url}" />
                    <DataGridHyperlinkColumn Header="Local URL" Binding="{Binding config.addr}" />
                    <DataGridTextColumn Width="*" />
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </Grid>
</UserControl>
